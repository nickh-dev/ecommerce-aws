name: Deploy infrastructure

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "eu-central-1"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform on infrastructure (deploy or destroy)'
        required: true
        default: 'deploy'

jobs:
  terraform-deploy:
    if: ${{ github.event.inputs.action == 'deploy' }}
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.8.1'

      - name: Terraform init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform plan
        run: terraform plan
        working-directory: ./terraform

      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ./terraform

  cleanup:
    needs: terraform-deploy
    if: ${{ needs.terraform-deploy.outputs.status != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.8.1'

      - name: Terraform init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform
        env:
          TF_VAR_confirm_destroy: 'true'

  manual-destroy:
    if: ${{ github.event.inputs.action == 'destroy' }}
    runs-on: ubuntu-latest
    needs: [terraform-deploy]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.8.1'

      - name: Terraform init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform